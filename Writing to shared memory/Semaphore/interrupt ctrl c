//FIX THIS
bool cancel = false;

void handler (int val)
{
    // Int val is NA
    cancel = true;
}

int interrupt()
{
    struct sigaction sa;

    sa.sa_handler = handler;
    sigemptyset(&sa.sa_mask);
    // Creates empty set of masks (masks are collections of signals that are currently blocked)
    sa.sa_flags = SA_RESTART;
    // If blocked call is interrupted by signal handler, restarts - NA in this case?

    if (sigaction(SIGINT, &sa, NULL) == -1)
    {
        std::cout << "Sigaction error\n";
        return(1);
    }

    if (cancel == true)
    {
        return(1);
    }

    return(0);
}
