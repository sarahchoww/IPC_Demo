/*
Sarah Chow
Adds to a file in shared memory, file shows the time stamp and inputted words (max 256 characters)
*/

#include <iostream>
#include <pthread.h>
#include <sys/mman.h>
#include <fcntl.h>
#include <unistd.h>
#include <string.h>
#include <time.h>

int main()
{
    int fileDir, unlink, bytesWritten;
    bool run = true;
    char buf[256];
    size_t sizeTime, sizeBuf, sizeAll;

    time_t my_time;
    char *outputTime;
    struct tm *ltime; // Local time

    fileDir = shm_open("/testSHM", O_CREAT | O_RDWR, 0600); // Open and create a file if it does not already exist

    while (run)
    {
        fgets(buf, 256, stdin);

        sizeBuf = strlen(buf);

        if ((buf[sizeBuf - 1] == '\n') && (sizeBuf == 1)) // Exit loop when user enters blank space (for now)
        {
            run = false;
        }
        else // Keep loop going
        {
            sizeBuf -= 1; // Ignore the newline from the user

            // Reset the time
            time(&my_time);
            ltime = localtime(&my_time);
            outputTime = asctime(ltime);

            // Get the sizes
            sizeTime = strlen(outputTime);
            sizeAll = sizeBuf + sizeTime;

            if (outputTime[sizeTime - 1] != '\t')
            {
                outputTime[sizeTime - 1] = '\t'; // Insert a tab after timestamp
            }

            write(fileDir, outputTime, sizeTime); // sizeTime + 1 since added the newline

            buf[sizeBuf] = '\n'; // Add a new line end of user input

            write(fileDir, buf, sizeBuf + 1); // Write in the file offset by sizeTime

            memset(buf, 0, sizeBuf); // Clear the buffer
        }
    }

    close(fileDir);

    unlink = shm_unlink("/testSHM");

    return (0);
}
